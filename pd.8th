#! /bin/env 8th

needs csv
needs opts
needs utils

\ all the filter tests to run
[] var, tests

: build-test \ col arg w -- a
    >r >n r> 3 a:close ;

: push-test \ col s w --
    build-test tests @ swap a:push drop ;

: cuts \ s -- a
    "," s:/ ( dup >n swap ?: ) a:map ;

\ command line options
{ "-f"  : ( a:shift dup csv:>sep )    \ field separator
, "-c"  : ( a:shift cuts )            \ columns/cut
, "-H"  : ( true )                    \ header row
, "-lt" : ( 2 a:take a:open ' n:< push-test null )
, "-gt" : ( 2 a:take a:open ' n:> push-test null )
, "-eq" : ( 2 a:take a:open ' n:= push-test null )
} constant optmap

: open \ s -- f
    f:open-ro null? if "input file not found" . bye then

    \ optionally read the header row
    "-H" app:opts@ if
        csv:rec> csv:>header
    then ;

: test \ a f test -- a f
    swap >r a:open >r >r csv:col a:@ >n r> r> w:exec r> ;

: filter \ a -- a f
    tests @ ' test a:every ;

: cut \ a -- a
    "-c" app:opts@ null; csv:cut ;

: process \ a --
    filter if cut "," csv:.rec then drop ;

: app:main \ entry point
    optmap opts:argv opts:parse

    \ process each data file
    ( open ' process csv:each f:close ) a:each! 
    
    \ done
    bye ;
